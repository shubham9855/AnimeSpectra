{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder (2)\\\\Projects\\\\AnimeSpectra\\\\myapp\\\\src\\\\Components\\\\Register\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Register.css\";\nimport { RegisterSchema } from \"../Registerschema\";\nimport { useFormik } from \"formik\";\nimport { useNavigate } from \"react-router-dom\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { signUp } from \"../../redux/action/loginaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  role: \"BASIC\",\n  interests: [],\n  confirm_password: \"\"\n};\nexport const Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    errors,\n    values,\n    touched,\n    handleChange,\n    handleSubmit\n  } = useFormik({\n    initialValues,\n    validationSchema: RegisterSchema,\n    onSubmit: async values => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/auth/signup`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            userName: values.name,\n            email: values.email,\n            password: values.password,\n            role: \"BASIC\",\n            interests: []\n          })\n        });\n        if (!response.ok) {\n          throw new Error(\"Login failed\");\n        }\n        navigate(\"/login\");\n        // Handle successful login\n\n        // You might want to redirect the user or update the UI accordingly\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"register-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inp-group\",\n        type: \"text\",\n        placeholder: \"Username\",\n        name: \"name\",\n        value: values.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), errors.name && touched ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inp-group\",\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: values.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), errors.email && touched ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 36\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inp-group\",\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        value: values.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), errors.password && touched ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 39\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inp-group\",\n        type: \"password\",\n        name: \"confirm_password\",\n        placeholder: \"Confirm Password\",\n        value: values.confirm_password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), errors.confirm_password && touched ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.confirm_password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"reg-button\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"srkhxgVyTLKdf7//Zwwj6V+5uwI=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","RegisterSchema","useFormik","useNavigate","jsxDEV","_jsxDEV","initialValues","name","email","password","role","interests","confirm_password","Register","_s","navigate","loading","setLoading","error","setError","errors","values","touched","handleChange","handleSubmit","validationSchema","onSubmit","response","fetch","process","env","REACT_APP_BACKEND_URL","method","headers","body","JSON","stringify","userName","ok","Error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","required","_c","$RefreshReg$"],"sources":["D:/New folder (2)/Projects/AnimeSpectra/myapp/src/Components/Register/Register.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Register.css\";\r\nimport { RegisterSchema } from \"../Registerschema\";\r\nimport { useFormik } from \"formik\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { signUp } from \"../../redux/action/loginaction\";\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  role: \"BASIC\",\r\n  interests: [],\r\n  confirm_password: \"\",\r\n};\r\nexport const Register = () => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const { errors, values, touched, handleChange, handleSubmit } = useFormik({\r\n    initialValues,\r\n    validationSchema: RegisterSchema,\r\n    onSubmit: async (values) => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const response = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/api/auth/signup`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              userName: values.name,\r\n              email: values.email,\r\n              password: values.password,\r\n              role: \"BASIC\",\r\n              interests: [],\r\n            }),\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Login failed\");\r\n        }\r\n        navigate(\"/login\");\r\n        // Handle successful login\r\n\r\n        // You might want to redirect the user or update the UI accordingly\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <form onSubmit={handleSubmit} className=\"register-form\">\r\n        <h2>Register</h2>\r\n\r\n        <input\r\n          className=\"inp-group\"\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          name=\"name\"\r\n          value={values.name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        {errors.name && touched ? <p>{errors.name}</p> : null}\r\n        <input\r\n          className=\"inp-group\"\r\n          type=\"text\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={values.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        {errors.email && touched ? <p>{errors.email}</p> : null}\r\n        <input\r\n          className=\"inp-group\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          value={values.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        {errors.password && touched ? <p>{errors.password}</p> : null}\r\n        <input\r\n          className=\"inp-group\"\r\n          type=\"password\"\r\n          name=\"confirm_password\"\r\n          placeholder=\"Confirm Password\"\r\n          value={values.confirm_password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        {errors.confirm_password && touched ? (\r\n          <p>{errors.confirm_password}</p>\r\n        ) : null}\r\n        <button type=\"submit\" className=\"reg-button\">\r\n          Register\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}