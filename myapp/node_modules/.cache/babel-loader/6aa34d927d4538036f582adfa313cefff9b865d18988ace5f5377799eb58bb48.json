{"ast":null,"code":"const initialState = {\n  post: {}\n};\nexport const commentreducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_COMMENT\":\n      return {\n        ...state,\n        comments: [...comments, action.payload]\n      };\n    case \"SET_COMMENTS_POST\":\n      return {\n        ...state,\n        post: action.payload\n      };\n    case \"SET_POST_LIKE\":\n      let partPost = state.post;\n      partPost = {\n        ...partPost,\n        likes: [...partPost.likes, {\n          likeType: \"like\",\n          userId: action.payload.userId\n        }]\n      };\n      return {\n        ...state,\n        post: partPost\n      };\n    case \"SET_POST_DISLIKE\":\n      let particularPost = state.post;\n      particularPost = {\n        ...particularPost,\n        likes: particularPost.likes.filter(item => {\n          return (item === null || item === void 0 ? void 0 : item.userId) !== action.payload.userId;\n        })\n      };\n      return {\n        ...state,\n        post: particularPost\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["initialState","post","commentreducer","state","action","type","comments","payload","partPost","likes","likeType","userId","particularPost","filter","item"],"sources":["D:/New folder (2)/Projects/AnimeSpectra/myapp/src/redux/reducers/commentreducer.js"],"sourcesContent":["const initialState = {\r\n  post: {},\r\n};\r\n\r\nexport const commentreducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_COMMENT\":\r\n      return {\r\n        ...state,\r\n        comments: [...comments, action.payload],\r\n      };\r\n\r\n    case \"SET_COMMENTS_POST\":\r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n      };\r\n\r\n    case \"SET_POST_LIKE\":\r\n      let partPost = state.post;\r\n      partPost = {\r\n        ...partPost,\r\n        likes: [\r\n          ...partPost.likes,\r\n          { likeType: \"like\", userId: action.payload.userId },\r\n        ],\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        post: partPost,\r\n      };\r\n\r\n    case \"SET_POST_DISLIKE\":\r\n      let particularPost = state.post;\r\n      particularPost = {\r\n        ...particularPost,\r\n        likes: particularPost.likes.filter((item) => {\r\n          return item?.userId !== action.payload.userId;\r\n        }),\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        post: particularPost,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,IAAI,EAAE,CAAC;AACT,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EAC9D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,OAAO;QACL,GAAGF,KAAK;QACRG,QAAQ,EAAE,CAAC,GAAGA,QAAQ,EAAEF,MAAM,CAACG,OAAO;MACxC,CAAC;IAEH,KAAK,mBAAmB;MACtB,OAAO;QACL,GAAGJ,KAAK;QACRF,IAAI,EAAEG,MAAM,CAACG;MACf,CAAC;IAEH,KAAK,eAAe;MAClB,IAAIC,QAAQ,GAAGL,KAAK,CAACF,IAAI;MACzBO,QAAQ,GAAG;QACT,GAAGA,QAAQ;QACXC,KAAK,EAAE,CACL,GAAGD,QAAQ,CAACC,KAAK,EACjB;UAAEC,QAAQ,EAAE,MAAM;UAAEC,MAAM,EAAEP,MAAM,CAACG,OAAO,CAACI;QAAO,CAAC;MAEvD,CAAC;MAED,OAAO;QACL,GAAGR,KAAK;QACRF,IAAI,EAAEO;MACR,CAAC;IAEH,KAAK,kBAAkB;MACrB,IAAII,cAAc,GAAGT,KAAK,CAACF,IAAI;MAC/BW,cAAc,GAAG;QACf,GAAGA,cAAc;QACjBH,KAAK,EAAEG,cAAc,CAACH,KAAK,CAACI,MAAM,CAAEC,IAAI,IAAK;UAC3C,OAAO,CAAAA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEH,MAAM,MAAKP,MAAM,CAACG,OAAO,CAACI,MAAM;QAC/C,CAAC;MACH,CAAC;MAED,OAAO;QACL,GAAGR,KAAK;QACRF,IAAI,EAAEW;MACR,CAAC;IAEH;MACE,OAAOT,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}