{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder (2)\\\\Projects\\\\AnimeSpectra\\\\myapp\\\\src\\\\Components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport { LoginSchema } from \"../Loginschema\";\nimport { useNavigate } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { signIn } from \"../../redux/action/loginaction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  email: \"\",\n  password: \"\"\n};\nexport const Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [Loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    errors,\n    values,\n    touched,\n    handleChange,\n    handleSubmit\n  } = useFormik({\n    initialValues,\n    validationSchema: LoginSchema,\n    onSubmit: async values => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/api/auth/signin`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: values.email,\n            password: values.password\n          })\n        });\n        if (response.ok) {\n          const data = await response.json();\n          const token = data.jwtToken;\n\n          // Store the token in localStorage\n          localStorage.setItem(\"token\", token);\n          navigate(\"/\");\n          // Handle successful login\n        } else {\n          throw new Error(\"Login failed\");\n        }\n\n        // You might want to redirect the user or update the UI accordingly.\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-heading\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-group\",\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: values.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), errors.email && touched ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 36\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-group\",\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: values.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), errors.password && touched ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 39\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"toregister\",\n        to: \"/register\",\n        children: \"Don't have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"riX4xT8YdmALQKcwtVJOkxzqrkw=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useFormik","LoginSchema","useNavigate","jsxDEV","_jsxDEV","initialValues","email","password","Login","_s","navigate","Loading","setLoading","error","setError","errors","values","touched","handleChange","handleSubmit","validationSchema","onSubmit","response","fetch","process","env","REACT_APP_BACKEND_URL","method","headers","body","JSON","stringify","ok","data","json","token","jwtToken","localStorage","setItem","Error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","value","onChange","required","to","_c","$RefreshReg$"],"sources":["D:/New folder (2)/Projects/AnimeSpectra/myapp/src/Components/Login/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport { LoginSchema } from \"../Loginschema\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { signIn } from \"../../redux/action/loginaction\";\r\n\r\nconst initialValues = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport const Login = () => {\r\n  const navigate = useNavigate();\r\n  const [Loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const { errors, values, touched, handleChange, handleSubmit } = useFormik({\r\n    initialValues,\r\n    validationSchema: LoginSchema,\r\n    onSubmit: async (values) => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const response = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/api/auth/signin`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              email: values.email,\r\n              password: values.password,\r\n            }),\r\n          }\r\n        );\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n\r\n          const token = data.jwtToken;\r\n\r\n          // Store the token in localStorage\r\n          localStorage.setItem(\"token\", token);\r\n          navigate(\"/\");\r\n          // Handle successful login\r\n        } else {\r\n          throw new Error(\"Login failed\");\r\n        }\r\n\r\n        // You might want to redirect the user or update the UI accordingly.\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n  });\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form onSubmit={handleSubmit} className=\"login-form\">\r\n        <h2 className=\"login-heading\">Login</h2>\r\n        {/* <div className=\"input-group\"> */}\r\n        <input\r\n          className=\"input-group\"\r\n          type=\"text\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={values.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        {errors.email && touched ? <p>{errors.email}</p> : null}\r\n\r\n        <input\r\n          className=\"input-group\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={values.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        {errors.password && touched ? <p>{errors.password}</p> : null}\r\n\r\n        <button type=\"submit\" className=\"login-button\">\r\n          Login\r\n        </button>\r\n        <Link className=\"toregister\" to=\"/register\">\r\n          Don't have an account?\r\n        </Link>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}